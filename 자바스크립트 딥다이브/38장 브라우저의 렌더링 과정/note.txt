질문: 렌더링이 뭔지 말해보시오.

질문: html,css,js가 렌더링 되는 과정은 말해보시오.

질문 : 파싱이 뭔지 말해보시오.

질문: html에서 script태그가 바디태그 닫는 부분 앞에 있어야하는 이유는?

동기적으로 실행되는 html파싱과정에서 자바스크립트는 DOM이 생성이 되있어야
DOM API를 사용할 수 있는데 head태그쪽에서 script태그를 쓴다면 
생성되있지 않은 DOM이 생성되기전에
DOM API를 쓰는 것이기 때문에 오류가 난다. 
script태그의 위치에 상관없이 쓰기 위한 script태그의 속성은 async와 defer이 있다.











렌더링
- HTML,CSS,자바스크립트로 작성된 문서를 파싱하여 브라우저에 시각적으로 출력하는 것을 의미

파싱
- 프로그래밍 언어의 문법에 맞게 작성된 텍스트 문서를 읽어 들여 실행하기 위해 
텍스트 문서의 문자열을 토큰으로 분해하고, 토큰에 문법적 의미와 구조를 반영하여 
트리 구조의 자료구조인 파스 트리를 생성하는 일련의 과정
(토큰이란 문법적인 의미를 가지며, 문법적으로 더는 나눌 수 없는 코드의 기본요소를 의미)

- 파싱이 완료된 이후에는 파스 트리를 기반으로 중간언어인 바이트코드를 생성하고 실행

렌더링 과정
1. 브라우저는 HTML,CSS,JS,img, 폰트 파일 등 렌더링에 필요한 리소스를 서버에 요청하고 응답을 받는다.
2. 브라우저의 렌더링 엔진은 서버로부터 응답된 HTML과 CSS를 파싱하여 DOM과 CCSOM을 생성하고 이들을 
겹합하여 렌더 트리를 생성한다.

3. 브라우저의 자바스크립트 엔진은 서버로부터 응답된 자바스크립트를 파싱하여 AST를 생성하고 바이트코드로
변환하여 실행한다.
이 때 자바스크립트는 DOM API를 통해 DOM이나 CCSOM을 변경할 수 있다.
변경된 DOM과 CCSOM은 다시 렌더 트리로 결합된다.

4. 렌더 트리를 기반으로 HTML 요소의 레이아웃을 계산하고 브라우저 화면에 HTML요소를 페인팅한다.


* 서버에 필요한 리소스를 요청하기 위한 수단 : 주소창







HTML파싱과 DOM 생성

- 렌더링 엔진 : 
HTML과 CSS를 파싱하는 역할 

- 렌더 트리:
렌더링을 위한 트리 구조의 자료구조
브라우저 화면에 렌더링되는 노드만으로 구성 (meta태그 , script태그는 포함되지 않는다.)
이는 DOM과 CCSOM이 결합되어 렌더 트리를 생성

- 순수한 텍스트인 HTML문서를 브라우저에 시각적인 픽셀로 렌더링하려면
HTML 문서를 브라우저가 이해할 수 있는 자료구조(객체)로 변환하여 메모리에 저장해야함.

1. 서버에 존재하던 HTML 문서가 요청되면 이를 바이트로 응답한다.
2. 브라우저는 바이트로 전송받은  HTML문서를 meta태그의 charset에 의거한 방식에 따라 문자열로 변환이 된다.
3. 문자열은 토큰으로 분해하고 토큰을 객체화하여 노드들을 생성하고 노드는 DOM을 구성하는 요소가 된다.
4. 이러한 노드들을 트리 자료구조 방식으로 구성한다. 이러한 자료구조를 DOM이라고 함.

즉, DOM은 HTML문서를 파싱한 결과물





CSS 파싱과 CSSOM 생성

- HTML을 파싱하는 도중 CSS태그(link,style)를 만나면 html파싱을 잠시 중단하고 css태그를 파싱한다.
css를 파싱해서 만들어진 결과물은 CSSOM이다.





리렌더링이 되는 경우
- 자바스크립트에 의한 노드 추가 또는 삭제
- 브라우저 창의 리사이징에 의한 뷰포트 크기 변경
- HTML 요소의 레이아웃의 변경을 발생시키는 스타일 변경

* 리렌더링은 성능에 악영향을 주는 작업으로 최대한 지양하는 편이 좋음.
즉, 자바스크립트를 통한 노드 추가를 지양하는 것이 좋다는 얘기?





자바스크립트 파싱과 실행
- 자바스크립트에서 DOM API를 사용하면 이미 생성된 DOM을 동적으로 조작할 수 있음.
- 자바스크립트 파싱은 자바스크립트 엔진이 한다.
- 자바스크립트 파싱 결과물은 AST(Abstract Syntax Tree / 추상적 구문 트리) 이다.

파싱과정

자바스크립트 소스코드 => 토큰 => AST => 바이트코드

- html파싱 도중 script태그를 만나면 렌더링 엔진이 아닌 자바스크립트 엔진에 제어권을 넘긴다.
- js파싱이 종료되면 제어권을 다시 렌더링엔진으로 넘김.



