변수

- 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 
그 메모리 공간을 식별하기 위해 붙인 이름

- 값의 위치를 가리키는 상징적인 이름

-변수명 : 메모리 공간에 저장된 값을 식별할 수 있는 고유한 이름
변수 값 : 변수에 저장된 값  예) 1
할당 : 변수에 값을 저장하는 것 예) a = 1
참조 : 변수에 저장된 값을 읽어 들이는 것 예) a;
선언: 변수를 생성  예) const a;

- 변수 선언 시 var, let ,const 사용

- var 키워드를 사용하면 선언단계와 초기화단계가 동시에 진행됨.

- 변수 값 재할당 가능
재할당할 때에 기존 메모리공간에 저장되는 것이 아니라
새로운 메모리 공간을 갖는 것

* var의 단점 : 블록 레벨 스코프를 지원하지 않고 함수 레벨 스코프를 지원함.

- 변수를 할당하지 않고 선언만 해도 undefined라는 값이 할당(초기화)이 된다. (자바스크립트의 독특한 특징)
 선언 => 초기화


**중요한 개념**
변수 선언의 실행 시점과 변수 호이스팅

- 변수 선언은 런타임(소스코드가 한 줄씩 순차적으로 실행되는 시점)이 아니라
그 이전단계에서 먼저 실행 

즉, 변수가 어디있든 먼저 실행됨.

=> 이를 변수 호이스팅이라고 함.

모든 선언문은 런타임이전에 실행됨.

자바스크립트 엔진은 소스코드를 한 줄씩 순차적으로 실행하기에 앞서 
먼저 소스코드의 평가 과정을 거치면서 소스코드를 실행하기 위한 준비를 함.

이 때 소스코드 평가 과정(소스코드 실행을 위한 준비단계)에서
자바스크립트 엔진은 변수 선언을 포함한 모든 선언문(함수선언문,변수선언문)을 
소스코드에서 찾아내 먼저 실행함.

소스코드 평가과정이 끝나면 소스코드가 실행


- 변수 선언과 할당은 실행시점이 다르다!
 선언은 런타임이전에 실행되지만 할당은 런타임에 의해 실행됨.




참조

*객체
변수하나에 여러가지 정보를 저장하기 위해 사용

*실행 컨텍스트
자바스크립트 엔진이 소스코드를 평가하고 실행하기 위해 필요한 환경을 제공하고
코드의 실행 결과를 실제로 관리하는 영역

자바스크립트 엔진은 실행 컨텍스트를 통해 식별자와 스코프를 관리함.

변수를 비롯한 모든 식별자는 실행 컨텍스트에 등록됨.

실행 컨텍스트에서 변수이름과 값은 객체의 키:값으로 이루어져있음.